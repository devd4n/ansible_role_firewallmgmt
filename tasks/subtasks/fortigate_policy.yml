---
# Changes a list of strings like ['sourceobj1', 'sourceobj2']
# to a list of dicts like [{'name': 'sourceobj1'}, {'name': 'sourceobj2'}]
- name: Transform Lists to list of dictionaries with name-value pairs
  set_fact:
    srczone: >
      [{% for item in item_policy.srczone | default(srczone) %}
      {"name": "{{ item }}"}{% if not loop.last %}, {% endif %}
      {% endfor %}]
    dstzone: >
      [{% for item in item_policy.dstzone | default(dstzone) %}
      {"name": "{{ item }}"}{% if not loop.last %}, {% endif %}
      {% endfor %}]
    srcobj: >
      [{% for item in item_policy.srcobj | default('srcobj') %}
      {"name": "{{ item }}"}{% if not loop.last %}, {% endif %}
      {% endfor %}]
    dstobj: >
      [{% for item in item_policy.dstobj | default('dstobj') %}
      {"name": "{{ item }}"}{% if not loop.last %}, {% endif %}
      {% endfor %}]
    services: >
      [{% for item in item_policy.services | default('services') %}
      {"name": "{{ item }}"}{% if not loop.last %}, {% endif %}
      {% endfor %}]
  #no_log: true

- name: Configuring firewall policy {{item_policy.uid}} {{ item_policy.name }} on {{ inventory_hostname }}
  fortinet.fortios.fortios_firewall_policy:
    access_token: "{{ access_token }}"
    vdom: "{{ item_policy.device.split('%')[1] }}"
    state: "{{ item_policy.state }}"
    enable_log: true
    firewall_policy:
      srcintf: "{{ srczone }}"
      dstintf:
        - name: "{{ dstzone }}"
      srcaddr:
        - name: "{{ srcobj }}"
      dstaddr:
        - name: "{{ dstobj }}"
      schedule: "always"
      service:
        - name: "{{ services }}"
      action: "{{ item_policy.action }}"
      nat: "{{ item_policy.nat }}"
      status: "{{ item_policy.status }}"
      policyid: "{{ None if item_policy.uid == 0 else item_policy.uid }}"
      name: "{{ item_policy.name }}"

- name: Move Policies
  fortinet.fortios.fortios_firewall_policy:
    access_token: "{{ access_token }}"
    vdom: "{{ item_policy.device.split('%')[1] }}"
    state: "present"
    action: move
    self: "{{ item_policy.uid }}"
    before: "{{ item_policy.location_before }}"
  register: result_first_task   # Register result of the first task
  ignore_errors: yes            # Continue even if the task fails

# https://github.com/fortinet-ansible-dev/ansible-galaxy-fortios-collection/issues/353
- name: Workaround for moving policies cause of bug in version 2.3.8 fortios
  fortinet.fortios.fortios_json_generic:
    vdom: "{{ item_policy.device.split('%')[1] }}"
    json_generic:
      method: PUT
      path: "/api/v2/cmdb/firewall/policy/{{ item_policy.uid }}"
      jsonbody: '{}'
      specialparams: action=move&before={{ item_policy.location_before }}&vdom={{ vdom }}
  when: result_first_task is failed  # Run only if the first task fails
  ignore_errors: yes            # Continue even if the task fails